<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinapost.devp.generate.dao.CodeTemplateDAO">


    <sql id="codeTemplateColumns">
        ${alias}.template_id as templateId,
        ${alias}.`code`,
        ${alias}.`name`,
        ${alias}.template_version as templateVersion,
        ${alias}.sys_low_version as sysLowVersion,
        ${alias}.sys_default as sysDefault,
        ${alias}.remark,
        ${alias}.meta_label as metaLabel,
        ${alias}.inner_version as innerVersion,
        ${alias}.created_time as createdTime,
        ${alias}.created_by as createdBy,
        ${alias}.operated_time as operatedTime,
        ${alias}.operated_by as operatedBy,
        ${alias}.version,
        ${alias}.deleted
    </sql>


    <select id="findById" resultType="CodeTemplatePO">
        select
            <include refid="codeTemplateColumns"><property name="alias" value="t"/></include>
        from code_template t
        <where>
            and t.deleted=0
            and t.template_id = #{arg0}
        </where>
        limit 1
    </select>

    <select id="exist" resultType="boolean">
        select count(1) from code_template
        <where>
            and deleted=0
            and template_id = #{arg0}
        </where>
    </select>

    <insert id="_save" useGeneratedKeys="true" keyProperty="templateId" parameterType="CodeTemplatePO">
        insert into code_template(
        template_id,
        `code`,
        `name`,
        template_version,
        sys_low_version,
        sys_default,
        remark,
        meta_label,
        inner_version,
        created_time,
        created_by,
        operated_time,
        operated_by,
        version,
        deleted
        ) VALUES (
        #{templateId,jdbcType=INTEGER},
        #{code,jdbcType=VARCHAR},
        #{name,jdbcType=VARCHAR},
        #{templateVersion,jdbcType=VARCHAR},
        #{sysLowVersion,jdbcType=VARCHAR},
        #{sysDefault,jdbcType=BOOLEAN},
        #{remark,jdbcType=VARCHAR},
        #{metaLabel,jdbcType=VARCHAR},
        #{innerVersion,jdbcType=INTEGER},
        #{createdTime,jdbcType=TIMESTAMP},
        #{createdBy,jdbcType=VARCHAR},
        #{operatedTime,jdbcType=TIMESTAMP},
        #{operatedBy,jdbcType=VARCHAR},
        #{version,jdbcType=INTEGER},
        #{deleted,jdbcType=BOOLEAN}
        )
    </insert>


    <update id="_update" parameterType="CodeTemplatePO">
        update code_template set
            `code`=#{code,jdbcType=VARCHAR},
            `name`=#{name,jdbcType=VARCHAR},
            template_version=#{templateVersion,jdbcType=VARCHAR},
            sys_low_version=#{sysLowVersion,jdbcType=VARCHAR},
            sys_default=#{sysDefault,jdbcType=BOOLEAN},
            remark=#{remark,jdbcType=VARCHAR},
            meta_label=#{metaLabel,jdbcType=VARCHAR},
            inner_version=#{innerVersion,jdbcType=INTEGER},
            operated_time=#{operatedTime,jdbcType=TIMESTAMP},
            operated_by=#{operatedBy,jdbcType=VARCHAR},
            version = version+1,
            deleted=#{deleted,jdbcType=BOOLEAN}
        where template_id=#{templateId,jdbcType=INTEGER}
        and version=#{version,jdbcType=INTEGER}
        and deleted=0
    </update>

    <delete id="delete">
        update code_template set deleted=1
        where template_id=#{arg0,jdbcType=INTEGER}
        and deleted=0
    </delete>


    <sql id="queryCondition">
        <if test="code != null and code !='' ">
            <bind name="code_pattern" value="'%' + code + '%'" />
            and t.`code` like #{code_pattern}
        </if>
        <if test="name != null and name !='' ">
            <bind name="name_pattern" value="'%' + name + '%'" />
            and t.`name` like #{name_pattern}
        </if>
        <if test="sysDefault != null ">
            and t.sys_default = #{sysDefault}
        </if>
    </sql>

    <sql id="orderCondition">
        order by
        <if test="createdTimeSortSign != null and createdTimeSortSign!=0">
            t.created_time <if test="createdTimeSortSign > 0">asc</if><if test="createdTimeSortSign &lt; 0">desc</if>,
        </if>
        <if test="operatedTimeSortSign != null and operatedTimeSortSign!=0">
            t.operated_time <if test="operatedTimeSortSign > 0">asc</if><if test="operatedTimeSortSign &lt; 0">desc</if>,
        </if>
            t.operated_time desc
    </sql>

    <select id="findCountByQuery" parameterType="CodeTemplateQO" resultType="int">
        select count(1) from code_template t
        <where>
            and t.deleted=0
        <include refid="queryCondition"/>
        </where>
    </select>

    <select id="findListByQuery" parameterType="CodeTemplateQO" resultType="CodeTemplateListVO">
        select
            <include refid="codeTemplateColumns"><property name="alias" value="t"/></include>
        from code_template t
        <where>
            and t.deleted=0
        <include refid="queryCondition"/>
        </where>
        <include refid="orderCondition"/>
    </select>

    <select id="notUnique" resultType="java.lang.Boolean">
        select count(1) from code_template t
        <where>
            and t.deleted=0
            and t.`code` = #{code}
            and t.template_version = #{templateVersion}
            <if test="templateId != null  ">
                and t.template_id != #{templateId}
            </if>
        </where>
    </select>

    <select id="exists" resultType="java.lang.Boolean">
        select count(1) from (
            select 1 from code_template t
            where t.deleted=0
            limit 1
        ) as _t
    </select>


</mapper>
